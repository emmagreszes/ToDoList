{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/emmagreszes/Desktop/week4App/components/forms/Form.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useStickyState from \"../../useStickyState\";\nimport FormField from \"../FormField\";\nimport { Card, ListItem, Icon } from 'react-native-elements';\nexport default function Form(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      task = _useState4[0],\n      setTask = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dueDate = _useState6[0],\n      setDueDate = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      time = _useState8[0],\n      setTime = _useState8[1];\n\n  var toDoList = route.params.toDoList;\n  var writeItemToStorage = route.params.writeItemToStorage;\n\n  var handleFormValueChange = function handleFormValueChange(key, value) {\n    if (key == 'task') {\n      setTask(value);\n    } else if (key == 'dueDate') {\n      setDueDate(value);\n    } else if (key == 'time') {\n      setTime(value);\n    }\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var obj = {\n      Task: task,\n      DueDate: dueDate,\n      Time: time\n    };\n    writeItemToStorage(toDoList.concat(obj));\n    navigation.goBack();\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(FormField, {\n    label: \"Task\",\n    formKey: \"task\",\n    placeholder: \"Task\",\n    handleFormValueChange: handleFormValueChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), React.createElement(FormField, {\n    label: \"DueDate\",\n    formKey: \"dueDate\",\n    placeholder: \"Due Date/ Target Goal\",\n    handleFormValueChange: handleFormValueChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }), React.createElement(FormField, {\n    label: \"Time\",\n    formKey: \"time\",\n    placeholder: \"Desired Time to Complete Task\",\n    handleFormValueChange: handleFormValueChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    title: \"Submit\",\n    onPress: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), React.createElement(Card, {\n    containerStyle: {\n      padding: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, task))), React.createElement(Button, {\n    title: \"Go back\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 30,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/emmagreszes/Desktop/week4App/components/forms/Form.js"],"names":["React","Component","useState","useEffect","useStickyState","FormField","Card","ListItem","Icon","Form","route","navigation","text","setText","task","setTask","dueDate","setDueDate","time","setTime","toDoList","params","writeItemToStorage","handleFormValueChange","key","value","handleSubmit","obj","Task","DueDate","Time","concat","goBack","flex","alignItems","justifyContent","padding","styles","StyleSheet","create","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { Text, View, TextInput, Button, Image, StyleSheet } from 'react-native';\nimport useStickyState from '../../useStickyState';\nimport FormField from '../FormField';\nimport { Card, ListItem, Icon } from 'react-native-elements'\n\nexport default function Form({ route, navigation }) {\n  const [text, setText] = useState('');\n  const [task, setTask] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [time, setTime] = useState('');\n  const toDoList = route.params.toDoList;\n  const writeItemToStorage = route.params.writeItemToStorage;\n\n  const handleFormValueChange = (key, value) => {\n    if (key == 'task') {\n      setTask(value)\n    } else if (key == 'dueDate') {\n      setDueDate(value)\n    } else if (key == 'time') {\n      setTime(value)\n    }\n  }\n\n  const handleSubmit = () => {\n    const obj = {Task:task, DueDate:dueDate, Time:time}\n    writeItemToStorage(toDoList.concat(obj))\n    navigation.goBack()\n  }\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n\n    <FormField\n      label='Task'\n      formKey='task'\n      placeholder='Task'\n      handleFormValueChange={handleFormValueChange}\n    />\n    <FormField\n      label='DueDate'\n      formKey='dueDate'\n      placeholder='Due Date/ Target Goal'\n      handleFormValueChange={handleFormValueChange}\n    />\n    <FormField\n      label='Time'\n      formKey='time'\n      placeholder='Desired Time to Complete Task'\n      handleFormValueChange={handleFormValueChange}\n    />\n    <Button title = \"Submit\" onPress={handleSubmit}/>\n\n\n\n      <Card containerStyle= {{padding:8}}>\n        {\n            <View>\n              <Text style = {styles.text}>{task}</Text>\n            </View>\n        }\n      </Card>\n      <Button title=\"Go back\" onPress={() => navigation.goBack()} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 30,\n    textAlign: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}